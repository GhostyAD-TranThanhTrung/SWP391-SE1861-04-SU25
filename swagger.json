{
    "openapi": "3.0.0",
    "info": {
        "title": "SWP391 API",
        "version": "1.0.0",
        "description": "API documentation for SWP391 project"
    },
    "servers": [
        {
            "url": "http://localhost:3000",
            "description": "Development server"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/data": {
            "get": {
                "summary": "Test API endpoint",
                "responses": {
                    "200": {
                        "description": "Successful response"
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "summary": "User login",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "summary": "User registration",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    },
                                    "name": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Registration failed"
                    }
                }
            }
        },
        "/api/google-login": {
            "post": {
                "summary": "Google login",
                "responses": {
                    "200": {
                        "description": "Google login successful"
                    }
                }
            }
        },
        "/api/google-register": {
            "post": {
                "summary": "Google registration",
                "responses": {
                    "201": {
                        "description": "Google registration successful"
                    }
                }
            }
        },
        "/api/profile": {
            "get": {
                "summary": "Get user profile (protected route)",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile data retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "summary": "Create new user profile",
                "description": "Create a new profile for the authenticated user. User ID is automatically extracted from JWT token.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "description": "User's display name",
                                        "example": "John Doe"
                                    },
                                    "certification": {
                                        "type": "string",
                                        "description": "Professional certifications",
                                        "example": "Certified Life Coach"
                                    },
                                    "workHoursJson": {
                                        "type": "string",
                                        "description": "Work schedule in JSON format",
                                        "example": "{\"monday\": \"9-17\", \"tuesday\": \"9-17\"}"
                                    },
                                    "bioJson": {
                                        "type": "string",
                                        "description": "Biography/description in JSON format",
                                        "example": "{\"intro\": \"Professional counselor with 5 years experience\"}"
                                    },
                                    "dateOfBirth": {
                                        "type": "string",
                                        "format": "date",
                                        "description": "Date of birth",
                                        "example": "1990-01-15"
                                    },
                                    "job": {
                                        "type": "string",
                                        "description": "Current job/profession",
                                        "example": "Mental Health Counselor"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Profile created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile created successfully"
                                        },
                                        "profile": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "certification": {
                                                    "type": "string",
                                                    "example": "Certified Life Coach"
                                                },
                                                "works_hours_json": {
                                                    "type": "string",
                                                    "example": "{\"monday\": \"9-17\"}"
                                                },
                                                "bio_json": {
                                                    "type": "string",
                                                    "example": "{\"intro\": \"Professional counselor\"}"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-15"
                                                },
                                                "job": {
                                                    "type": "string",
                                                    "example": "Mental Health Counselor"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data format"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing JWT token"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "409": {
                        "description": "Conflict - Profile already exists for this user"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/profile/{userId}": {
            "get": {
                "summary": "Get specific user profile by ID",
                "description": "Retrieve a specific user's profile information by their user ID. Requires authentication.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the user whose profile to retrieve",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile retrieved successfully"
                                        },
                                        "profile": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "certification": {
                                                    "type": "string",
                                                    "example": "Certified Life Coach"
                                                },
                                                "works_hours_json": {
                                                    "type": "string",
                                                    "example": "{\"monday\": \"9-17\"}"
                                                },
                                                "bio_json": {
                                                    "type": "string",
                                                    "example": "{\"intro\": \"Professional counselor\"}"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-15"
                                                },
                                                "job": {
                                                    "type": "string",
                                                    "example": "Mental Health Counselor"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - User ID is required"
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing JWT token"
                    },
                    "404": {
                        "description": "Profile not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/user/me": {
            "get": {
                "summary": "Get current user's profile",
                "description": "Retrieve the authenticated user's complete profile information including user data and profile details. User identity is determined from the JWT token.",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Current user profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Profile retrieved successfully"
                                        },
                                        "user": {
                                            "type": "object",
                                            "properties": {
                                                "user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "user@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "user"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "active"
                                                },
                                                "date_create": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-01-15T10:00:00.000Z"
                                                }
                                            }
                                        },
                                        "profile": {
                                            "type": "object",
                                            "nullable": true,
                                            "properties": {
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "certification": {
                                                    "type": "string",
                                                    "example": "Certified Life Coach"
                                                },
                                                "works_hours_json": {
                                                    "type": "string",
                                                    "example": "{\"monday\": \"9-17\", \"tuesday\": \"9-17\"}"
                                                },
                                                "bio_json": {
                                                    "type": "string",
                                                    "example": "{\"intro\": \"Professional counselor with 5 years experience\"}"
                                                },
                                                "date_of_birth": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "1990-01-15"
                                                },
                                                "job": {
                                                    "type": "string",
                                                    "example": "Mental Health Counselor"
                                                }
                                            }
                                        },
                                        "hasProfile": {
                                            "type": "boolean",
                                            "example": true,
                                            "description": "Indicates whether the user has created a profile"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or missing JWT token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "User not found"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Server error while fetching profile"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/staff": {
            "get": {
                "summary": "Get all staff",
                "description": "Retrieve all staff members (admin and consultant roles) with their profile information",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StaffMember"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Staff retrieved successfully"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 5
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "summary": "Create new staff",
                "description": "Create a new staff member with admin or consultant role",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateStaffRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Staff created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Staff created successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Invalid data or role must be admin/consultant"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Username or email already exists"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/staff/{staffId}": {
            "put": {
                "summary": "Update staff by ID",
                "description": "Update staff member information including user and profile data",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "staffId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the staff member to update",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateStaffRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Staff updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "profile": {
                                                    "$ref": "#/components/schemas/Profile"
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Staff updated successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - User is not a staff member"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Staff not found"
                    },
                    "409": {
                        "description": "Username or email already exists"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "summary": "Delete staff by ID",
                "description": "Delete a staff member and their associated profile",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "staffId",
                        "in": "path",
                        "required": true,
                        "description": "The ID of the staff member to delete",
                        "schema": {
                            "type": "integer",
                            "example": 123
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Staff deleted successfully"
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "deleted_user_id": {
                                                    "type": "integer",
                                                    "example": 123
                                                },
                                                "deleted_profile": {
                                                    "type": "boolean",
                                                    "example": true
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - User is not a staff member"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Staff not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/staff/{staffName}": {
            "get": {
                "summary": "Search staff by name",
                "description": "Search for staff members by username or full name",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "staffName",
                        "in": "path",
                        "required": true,
                        "description": "The name to search for (searches username and full name)",
                        "schema": {
                            "type": "string",
                            "example": "john"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff search results",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/StaffMember"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Found 2 staff member(s) matching \"john\""
                                        },
                                        "searchTerm": {
                                            "type": "string",
                                            "example": "john"
                                        },
                                        "count": {
                                            "type": "integer",
                                            "example": 2
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request - Staff name parameter is required"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/staff/statistics": {
            "get": {
                "summary": "Get staff statistics",
                "description": "Get comprehensive statistics about staff members",
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Staff statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "type": "object",
                                            "properties": {
                                                "totalStaff": {
                                                    "type": "integer",
                                                    "example": 10
                                                },
                                                "activeStaff": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "inactiveStaff": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "adminCount": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "consultantCount": {
                                                    "type": "integer",
                                                    "example": 7
                                                }
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Staff statistics retrieved successfully"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "schemas": {
            "User": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "email": {
                        "type": "string",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "consultant",
                            "Member"
                        ],
                        "example": "consultant"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "banned"
                        ],
                        "example": "active"
                    },
                    "date_create": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:00:00.000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-01-15T10:00:00.000Z"
                    }
                }
            },
            "Profile": {
                "type": "object",
                "nullable": true,
                "properties": {
                    "user_id": {
                        "type": "integer",
                        "example": 123
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15"
                    },
                    "job": {
                        "type": "string",
                        "example": "Counselor"
                    },
                    "bio_json": {
                        "type": "object",
                        "example": {
                            "intro": "Professional counselor with 5 years experience",
                            "specialties": [
                                "anxiety",
                                "depression"
                            ]
                        }
                    }
                }
            },
            "StaffMember": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "type": "object",
                        "properties": {
                            "profile": {
                                "$ref": "#/components/schemas/Profile"
                            }
                        }
                    }
                ]
            },
            "CreateStaffRequest": {
                "type": "object",
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@company.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "securePassword123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "consultant"
                        ],
                        "default": "consultant",
                        "example": "consultant"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "banned"
                        ],
                        "default": "active",
                        "example": "active"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15"
                    },
                    "job": {
                        "type": "string",
                        "example": "Counselor"
                    },
                    "bio_json": {
                        "type": "object",
                        "example": {
                            "intro": "Professional counselor",
                            "specialties": [
                                "anxiety",
                                "depression"
                            ]
                        }
                    }
                }
            },
            "UpdateStaffRequest": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john.updated@company.com"
                    },
                    "password": {
                        "type": "string",
                        "example": "newSecurePassword123"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "consultant"
                        ],
                        "example": "admin"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "active",
                            "inactive",
                            "banned"
                        ],
                        "example": "active"
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe Updated"
                    },
                    "date_of_birth": {
                        "type": "string",
                        "format": "date",
                        "example": "1990-01-15"
                    },
                    "job": {
                        "type": "string",
                        "example": "Senior Counselor"
                    },
                    "bio_json": {
                        "type": "object",
                        "example": {
                            "intro": "Senior professional counselor",
                            "specialties": [
                                "anxiety",
                                "depression",
                                "trauma"
                            ]
                        }
                    }
                }
            }
        }
    }
}